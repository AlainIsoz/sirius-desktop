/**
 * Copyright (c) 2007, 2013 THALES GLOBAL SERVICES.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *    Obeo - initial API and implementation
 * 
 */
package org.eclipse.sirius.viewpoint.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.sirius.viewpoint.util.ViewpointAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support
 * Viewers. The adapters generated by this factory convert EMF adapter
 * notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}. The
 * adapters also support Eclipse property sheets. Note that most of the adapters
 * are shared among multiple instances. <!-- begin-user-doc --> <!--
 * end-user-doc -->
 * 
 * @generated
 */
public class ViewpointItemProviderAdapterFactory extends ViewpointAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    /**
     * This keeps track of the root adapter factory that delegates to this
     * adapter factory. <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected ComposedAdapterFactory parentAdapterFactory;

    /**
     * This is used to implement
     * {@link org.eclipse.emf.edit.provider.IChangeNotifier}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected IChangeNotifier changeNotifier = new ChangeNotifier();

    /**
     * This keeps track of all the supported types checked by
     * {@link #isFactoryForType isFactoryForType}. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     * 
     * @generated
     */
    protected Collection<Object> supportedTypes = new ArrayList<Object>();

    /**
     * This constructs an instance. <!-- begin-user-doc --> <!-- end-user-doc
     * -->
     * 
     * @generated
     */
    public ViewpointItemProviderAdapterFactory() {
        supportedTypes.add(IEditingDomainItemProvider.class);
        supportedTypes.add(IStructuredItemContentProvider.class);
        supportedTypes.add(ITreeItemContentProvider.class);
        supportedTypes.add(IItemLabelProvider.class);
        supportedTypes.add(IItemPropertySource.class);
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.DAnalysis} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DAnalysisItemProvider dAnalysisItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.DAnalysis}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDAnalysisAdapter() {
        if (dAnalysisItemProvider == null) {
            dAnalysisItemProvider = new DAnalysisItemProvider(this);
        }

        return dAnalysisItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.DRepresentationContainer} instances.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DRepresentationContainerItemProvider dRepresentationContainerItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.DRepresentationContainer}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDRepresentationContainerAdapter() {
        if (dRepresentationContainerItemProvider == null) {
            dRepresentationContainerItemProvider = new DRepresentationContainerItemProvider(this);
        }

        return dRepresentationContainerItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.DView} instances. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DViewItemProvider dViewItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.viewpoint.DView}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDViewAdapter() {
        if (dViewItemProvider == null) {
            dViewItemProvider = new DViewItemProvider(this);
        }

        return dViewItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.MetaModelExtension} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected MetaModelExtensionItemProvider metaModelExtensionItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.MetaModelExtension}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createMetaModelExtensionAdapter() {
        if (metaModelExtensionItemProvider == null) {
            metaModelExtensionItemProvider = new MetaModelExtensionItemProvider(this);
        }

        return metaModelExtensionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.DDiagram} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DDiagramItemProvider dDiagramItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.DDiagram}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDDiagramAdapter() {
        if (dDiagramItemProvider == null) {
            dDiagramItemProvider = new DDiagramItemProvider(this);
        }

        return dDiagramItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.DSemanticDiagram} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DSemanticDiagramItemProvider dSemanticDiagramItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.DSemanticDiagram}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDSemanticDiagramAdapter() {
        if (dSemanticDiagramItemProvider == null) {
            dSemanticDiagramItemProvider = new DSemanticDiagramItemProvider(this);
        }

        return dSemanticDiagramItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.HideFilter} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected HideFilterItemProvider hideFilterItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.HideFilter}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createHideFilterAdapter() {
        if (hideFilterItemProvider == null) {
            hideFilterItemProvider = new HideFilterItemProvider(this);
        }

        return hideFilterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.HideLabelFilter} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected HideLabelFilterItemProvider hideLabelFilterItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.HideLabelFilter}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createHideLabelFilterAdapter() {
        if (hideLabelFilterItemProvider == null) {
            hideLabelFilterItemProvider = new HideLabelFilterItemProvider(this);
        }

        return hideLabelFilterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.FoldingPointFilter} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected FoldingPointFilterItemProvider foldingPointFilterItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.FoldingPointFilter}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createFoldingPointFilterAdapter() {
        if (foldingPointFilterItemProvider == null) {
            foldingPointFilterItemProvider = new FoldingPointFilterItemProvider(this);
        }

        return foldingPointFilterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.FoldingFilter} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected FoldingFilterItemProvider foldingFilterItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.FoldingFilter}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createFoldingFilterAdapter() {
        if (foldingFilterItemProvider == null) {
            foldingFilterItemProvider = new FoldingFilterItemProvider(this);
        }

        return foldingFilterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.AppliedCompositeFilters} instances.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected AppliedCompositeFiltersItemProvider appliedCompositeFiltersItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.AppliedCompositeFilters}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createAppliedCompositeFiltersAdapter() {
        if (appliedCompositeFiltersItemProvider == null) {
            appliedCompositeFiltersItemProvider = new AppliedCompositeFiltersItemProvider(this);
        }

        return appliedCompositeFiltersItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.AbsoluteBoundsFilter} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected AbsoluteBoundsFilterItemProvider absoluteBoundsFilterItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.AbsoluteBoundsFilter}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createAbsoluteBoundsFilterAdapter() {
        if (absoluteBoundsFilterItemProvider == null) {
            absoluteBoundsFilterItemProvider = new AbsoluteBoundsFilterItemProvider(this);
        }

        return absoluteBoundsFilterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.Decoration} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DecorationItemProvider decorationItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.Decoration}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDecorationAdapter() {
        if (decorationItemProvider == null) {
            decorationItemProvider = new DecorationItemProvider(this);
        }

        return decorationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.DEObjectLink} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DEObjectLinkItemProvider deObjectLinkItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.DEObjectLink}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDEObjectLinkAdapter() {
        if (deObjectLinkItemProvider == null) {
            deObjectLinkItemProvider = new DEObjectLinkItemProvider(this);
        }

        return deObjectLinkItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.DDiagramLink} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DDiagramLinkItemProvider dDiagramLinkItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.DDiagramLink}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDDiagramLinkAdapter() {
        if (dDiagramLinkItemProvider == null) {
            dDiagramLinkItemProvider = new DDiagramLinkItemProvider(this);
        }

        return dDiagramLinkItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.DSourceFileLink} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DSourceFileLinkItemProvider dSourceFileLinkItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.DSourceFileLink}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDSourceFileLinkAdapter() {
        if (dSourceFileLinkItemProvider == null) {
            dSourceFileLinkItemProvider = new DSourceFileLinkItemProvider(this);
        }

        return dSourceFileLinkItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.DNode} instances. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DNodeItemProvider dNodeItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.viewpoint.DNode}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDNodeAdapter() {
        if (dNodeItemProvider == null) {
            dNodeItemProvider = new DNodeItemProvider(this);
        }

        return dNodeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.DNodeContainer} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DNodeContainerItemProvider dNodeContainerItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.DNodeContainer}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDNodeContainerAdapter() {
        if (dNodeContainerItemProvider == null) {
            dNodeContainerItemProvider = new DNodeContainerItemProvider(this);
        }

        return dNodeContainerItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.DNodeList} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DNodeListItemProvider dNodeListItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.DNodeList}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDNodeListAdapter() {
        if (dNodeListItemProvider == null) {
            dNodeListItemProvider = new DNodeListItemProvider(this);
        }

        return dNodeListItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.DNodeListElement} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DNodeListElementItemProvider dNodeListElementItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.DNodeListElement}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDNodeListElementAdapter() {
        if (dNodeListElementItemProvider == null) {
            dNodeListElementItemProvider = new DNodeListElementItemProvider(this);
        }

        return dNodeListElementItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.DEdge} instances. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DEdgeItemProvider dEdgeItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.viewpoint.DEdge}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDEdgeAdapter() {
        if (dEdgeItemProvider == null) {
            dEdgeItemProvider = new DEdgeItemProvider(this);
        }

        return dEdgeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.DDiagramSet} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DDiagramSetItemProvider dDiagramSetItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.DDiagramSet}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDDiagramSetAdapter() {
        if (dDiagramSetItemProvider == null) {
            dDiagramSetItemProvider = new DDiagramSetItemProvider(this);
        }

        return dDiagramSetItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.Dot} instances. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DotItemProvider dotItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.viewpoint.Dot}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDotAdapter() {
        if (dotItemProvider == null) {
            dotItemProvider = new DotItemProvider(this);
        }

        return dotItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.GaugeSection} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected GaugeSectionItemProvider gaugeSectionItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.GaugeSection}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createGaugeSectionAdapter() {
        if (gaugeSectionItemProvider == null) {
            gaugeSectionItemProvider = new GaugeSectionItemProvider(this);
        }

        return gaugeSectionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.FlatContainerStyle} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected FlatContainerStyleItemProvider flatContainerStyleItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.FlatContainerStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createFlatContainerStyleAdapter() {
        if (flatContainerStyleItemProvider == null) {
            flatContainerStyleItemProvider = new FlatContainerStyleItemProvider(this);
        }

        return flatContainerStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.ShapeContainerStyle} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected ShapeContainerStyleItemProvider shapeContainerStyleItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.ShapeContainerStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createShapeContainerStyleAdapter() {
        if (shapeContainerStyleItemProvider == null) {
            shapeContainerStyleItemProvider = new ShapeContainerStyleItemProvider(this);
        }

        return shapeContainerStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.Square} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected SquareItemProvider squareItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.viewpoint.Square}
     * . <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createSquareAdapter() {
        if (squareItemProvider == null) {
            squareItemProvider = new SquareItemProvider(this);
        }

        return squareItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.Ellipse} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected EllipseItemProvider ellipseItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.Ellipse}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createEllipseAdapter() {
        if (ellipseItemProvider == null) {
            ellipseItemProvider = new EllipseItemProvider(this);
        }

        return ellipseItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.Lozenge} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected LozengeItemProvider lozengeItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.Lozenge}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createLozengeAdapter() {
        if (lozengeItemProvider == null) {
            lozengeItemProvider = new LozengeItemProvider(this);
        }

        return lozengeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.BundledImage} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected BundledImageItemProvider bundledImageItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.BundledImage}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createBundledImageAdapter() {
        if (bundledImageItemProvider == null) {
            bundledImageItemProvider = new BundledImageItemProvider(this);
        }

        return bundledImageItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.WorkspaceImage} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected WorkspaceImageItemProvider workspaceImageItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.WorkspaceImage}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createWorkspaceImageAdapter() {
        if (workspaceImageItemProvider == null) {
            workspaceImageItemProvider = new WorkspaceImageItemProvider(this);
        }

        return workspaceImageItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.CustomStyle} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected CustomStyleItemProvider customStyleItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.CustomStyle}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createCustomStyleAdapter() {
        if (customStyleItemProvider == null) {
            customStyleItemProvider = new CustomStyleItemProvider(this);
        }

        return customStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.EdgeStyle} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected EdgeStyleItemProvider edgeStyleItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.EdgeStyle}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createEdgeStyleAdapter() {
        if (edgeStyleItemProvider == null) {
            edgeStyleItemProvider = new EdgeStyleItemProvider(this);
        }

        return edgeStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.DAnalysisCustomData} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DAnalysisCustomDataItemProvider dAnalysisCustomDataItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.DAnalysisCustomData}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDAnalysisCustomDataAdapter() {
        if (dAnalysisCustomDataItemProvider == null) {
            dAnalysisCustomDataItemProvider = new DAnalysisCustomDataItemProvider(this);
        }

        return dAnalysisCustomDataItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.GaugeCompositeStyle} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected GaugeCompositeStyleItemProvider gaugeCompositeStyleItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.GaugeCompositeStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createGaugeCompositeStyleAdapter() {
        if (gaugeCompositeStyleItemProvider == null) {
            gaugeCompositeStyleItemProvider = new GaugeCompositeStyleItemProvider(this);
        }

        return gaugeCompositeStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.LabelStyle} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected LabelStyleItemProvider labelStyleItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.LabelStyle}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createLabelStyleAdapter() {
        if (labelStyleItemProvider == null) {
            labelStyleItemProvider = new LabelStyleItemProvider(this);
        }

        return labelStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.BorderedStyle} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected BorderedStyleItemProvider borderedStyleItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.BorderedStyle}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createBorderedStyleAdapter() {
        if (borderedStyleItemProvider == null) {
            borderedStyleItemProvider = new BorderedStyleItemProvider(this);
        }

        return borderedStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.Note} instances. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected NoteItemProvider noteItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.viewpoint.Note}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createNoteAdapter() {
        if (noteItemProvider == null) {
            noteItemProvider = new NoteItemProvider(this);
        }

        return noteItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.DragAndDropTarget} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DragAndDropTargetItemProvider dragAndDropTargetItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.DragAndDropTarget}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDragAndDropTargetAdapter() {
        if (dragAndDropTargetItemProvider == null) {
            dragAndDropTargetItemProvider = new DragAndDropTargetItemProvider(this);
        }

        return dragAndDropTargetItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.FilterVariableHistory} instances.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected FilterVariableHistoryItemProvider filterVariableHistoryItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.FilterVariableHistory}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createFilterVariableHistoryAdapter() {
        if (filterVariableHistoryItemProvider == null) {
            filterVariableHistoryItemProvider = new FilterVariableHistoryItemProvider(this);
        }

        return filterVariableHistoryItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.FilterVariableValue} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected FilterVariableValueItemProvider filterVariableValueItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.FilterVariableValue}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createFilterVariableValueAdapter() {
        if (filterVariableValueItemProvider == null) {
            filterVariableValueItemProvider = new FilterVariableValueItemProvider(this);
        }

        return filterVariableValueItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.RGBValues} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected RGBValuesItemProvider rgbValuesItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.RGBValues}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createRGBValuesAdapter() {
        if (rgbValuesItemProvider == null) {
            rgbValuesItemProvider = new RGBValuesItemProvider(this);
        }

        return rgbValuesItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.DAnalysisSessionEObject} instances.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DAnalysisSessionEObjectItemProvider dAnalysisSessionEObjectItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.DAnalysisSessionEObject}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDAnalysisSessionEObjectAdapter() {
        if (dAnalysisSessionEObjectItemProvider == null) {
            dAnalysisSessionEObjectItemProvider = new DAnalysisSessionEObjectItemProvider(this);
        }

        return dAnalysisSessionEObjectItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.CollapseFilter} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected CollapseFilterItemProvider collapseFilterItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.CollapseFilter}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createCollapseFilterAdapter() {
        if (collapseFilterItemProvider == null) {
            collapseFilterItemProvider = new CollapseFilterItemProvider(this);
        }

        return collapseFilterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.IndirectlyCollapseFilter} instances.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected IndirectlyCollapseFilterItemProvider indirectlyCollapseFilterItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.IndirectlyCollapseFilter}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createIndirectlyCollapseFilterAdapter() {
        if (indirectlyCollapseFilterItemProvider == null) {
            indirectlyCollapseFilterItemProvider = new IndirectlyCollapseFilterItemProvider(this);
        }

        return indirectlyCollapseFilterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.SessionManagerEObject} instances.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected SessionManagerEObjectItemProvider sessionManagerEObjectItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.SessionManagerEObject}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createSessionManagerEObjectAdapter() {
        if (sessionManagerEObjectItemProvider == null) {
            sessionManagerEObjectItemProvider = new SessionManagerEObjectItemProvider(this);
        }

        return sessionManagerEObjectItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.DFile} instances. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DFileItemProvider dFileItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.viewpoint.DFile}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDFileAdapter() {
        if (dFileItemProvider == null) {
            dFileItemProvider = new DFileItemProvider(this);
        }

        return dFileItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.DResourceContainer} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DResourceContainerItemProvider dResourceContainerItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.DResourceContainer}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDResourceContainerAdapter() {
        if (dResourceContainerItemProvider == null) {
            dResourceContainerItemProvider = new DResourceContainerItemProvider(this);
        }

        return dResourceContainerItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.DProject} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DProjectItemProvider dProjectItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.DProject}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDProjectAdapter() {
        if (dProjectItemProvider == null) {
            dProjectItemProvider = new DProjectItemProvider(this);
        }

        return dProjectItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.DFolder} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DFolderItemProvider dFolderItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.DFolder}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDFolderAdapter() {
        if (dFolderItemProvider == null) {
            dFolderItemProvider = new DFolderItemProvider(this);
        }

        return dFolderItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.DModel} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected DModelItemProvider dModelItemProvider;

    /**
     * This creates an adapter for a {@link org.eclipse.sirius.viewpoint.DModel}
     * . <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDModelAdapter() {
        if (dModelItemProvider == null) {
            dModelItemProvider = new DModelItemProvider(this);
        }

        return dModelItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.BasicLabelStyle} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected BasicLabelStyleItemProvider basicLabelStyleItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.BasicLabelStyle}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createBasicLabelStyleAdapter() {
        if (basicLabelStyleItemProvider == null) {
            basicLabelStyleItemProvider = new BasicLabelStyleItemProvider(this);
        }

        return basicLabelStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.BeginLabelStyle} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected BeginLabelStyleItemProvider beginLabelStyleItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.BeginLabelStyle}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createBeginLabelStyleAdapter() {
        if (beginLabelStyleItemProvider == null) {
            beginLabelStyleItemProvider = new BeginLabelStyleItemProvider(this);
        }

        return beginLabelStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.CenterLabelStyle} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected CenterLabelStyleItemProvider centerLabelStyleItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.CenterLabelStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createCenterLabelStyleAdapter() {
        if (centerLabelStyleItemProvider == null) {
            centerLabelStyleItemProvider = new CenterLabelStyleItemProvider(this);
        }

        return centerLabelStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.EndLabelStyle} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected EndLabelStyleItemProvider endLabelStyleItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.EndLabelStyle}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createEndLabelStyleAdapter() {
        if (endLabelStyleItemProvider == null) {
            endLabelStyleItemProvider = new EndLabelStyleItemProvider(this);
        }

        return endLabelStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.BracketEdgeStyle} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected BracketEdgeStyleItemProvider bracketEdgeStyleItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.BracketEdgeStyle}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createBracketEdgeStyleAdapter() {
        if (bracketEdgeStyleItemProvider == null) {
            bracketEdgeStyleItemProvider = new BracketEdgeStyleItemProvider(this);
        }

        return bracketEdgeStyleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.viewpoint.ComputedStyleDescriptionRegistry}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    protected ComputedStyleDescriptionRegistryItemProvider computedStyleDescriptionRegistryItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.viewpoint.ComputedStyleDescriptionRegistry}.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createComputedStyleDescriptionRegistryAdapter() {
        if (computedStyleDescriptionRegistryItemProvider == null) {
            computedStyleDescriptionRegistryItemProvider = new ComputedStyleDescriptionRegistryItemProvider(this);
        }

        return computedStyleDescriptionRegistryItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link java.util.Map.Entry} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     * 
     * @generated
     */
    protected DiagramElementMapping2ModelElementItemProvider diagramElementMapping2ModelElementItemProvider;

    /**
     * This creates an adapter for a {@link java.util.Map.Entry}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createDiagramElementMapping2ModelElementAdapter() {
        if (diagramElementMapping2ModelElementItemProvider == null) {
            diagramElementMapping2ModelElementItemProvider = new DiagramElementMapping2ModelElementItemProvider(this);
        }

        return diagramElementMapping2ModelElementItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link java.util.Map.Entry} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     * 
     * @generated
     */
    protected ModelElement2ViewVariableItemProvider modelElement2ViewVariableItemProvider;

    /**
     * This creates an adapter for a {@link java.util.Map.Entry}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createModelElement2ViewVariableAdapter() {
        if (modelElement2ViewVariableItemProvider == null) {
            modelElement2ViewVariableItemProvider = new ModelElement2ViewVariableItemProvider(this);
        }

        return modelElement2ViewVariableItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link java.util.Map.Entry} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     * 
     * @generated
     */
    protected ViewVariable2ContainerVariableItemProvider viewVariable2ContainerVariableItemProvider;

    /**
     * This creates an adapter for a {@link java.util.Map.Entry}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createViewVariable2ContainerVariableAdapter() {
        if (viewVariable2ContainerVariableItemProvider == null) {
            viewVariable2ContainerVariableItemProvider = new ViewVariable2ContainerVariableItemProvider(this);
        }

        return viewVariable2ContainerVariableItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link java.util.Map.Entry} instances. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     * 
     * @generated
     */
    protected ContainerVariable2StyleDescriptionItemProvider containerVariable2StyleDescriptionItemProvider;

    /**
     * This creates an adapter for a {@link java.util.Map.Entry}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter createContainerVariable2StyleDescriptionAdapter() {
        if (containerVariable2StyleDescriptionItemProvider == null) {
            containerVariable2StyleDescriptionItemProvider = new ContainerVariable2StyleDescriptionItemProvider(this);
        }

        return containerVariable2StyleDescriptionItemProvider;
    }

    /**
     * This returns the root adapter factory that contains this factory. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    public ComposeableAdapterFactory getRootAdapterFactory() {
        return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
    }

    /**
     * This sets the composed adapter factory that contains this factory. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
        this.parentAdapterFactory = parentAdapterFactory;
    }

    /**
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public boolean isFactoryForType(Object type) {
        return supportedTypes.contains(type) || super.isFactoryForType(type);
    }

    /**
     * This implementation substitutes the factory itself as the key for the
     * adapter. <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Adapter adapt(Notifier notifier, Object type) {
        return super.adapt(notifier, this);
    }

    /**
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    @Override
    public Object adapt(Object object, Object type) {
        if (isFactoryForType(type)) {
            Object adapter = super.adapt(object, type);
            if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
                return adapter;
            }
        }

        return null;
    }

    /**
     * This adds a listener. <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    public void addListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.addListener(notifyChangedListener);
    }

    /**
     * This removes a listener. <!-- begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    public void removeListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.removeListener(notifyChangedListener);
    }

    /**
     * This delegates to {@link #changeNotifier} and to
     * {@link #parentAdapterFactory}. <!-- begin-user-doc --> <!-- end-user-doc
     * -->
     * 
     * @generated
     */
    public void fireNotifyChanged(Notification notification) {
        changeNotifier.fireNotifyChanged(notification);

        if (parentAdapterFactory != null) {
            parentAdapterFactory.fireNotifyChanged(notification);
        }
    }

    /**
     * This disposes all of the item providers created by this factory. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     * 
     * @generated
     */
    public void dispose() {
        if (dAnalysisItemProvider != null)
            dAnalysisItemProvider.dispose();
        if (dRepresentationContainerItemProvider != null)
            dRepresentationContainerItemProvider.dispose();
        if (dViewItemProvider != null)
            dViewItemProvider.dispose();
        if (metaModelExtensionItemProvider != null)
            metaModelExtensionItemProvider.dispose();
        if (dDiagramItemProvider != null)
            dDiagramItemProvider.dispose();
        if (dSemanticDiagramItemProvider != null)
            dSemanticDiagramItemProvider.dispose();
        if (hideFilterItemProvider != null)
            hideFilterItemProvider.dispose();
        if (hideLabelFilterItemProvider != null)
            hideLabelFilterItemProvider.dispose();
        if (foldingPointFilterItemProvider != null)
            foldingPointFilterItemProvider.dispose();
        if (foldingFilterItemProvider != null)
            foldingFilterItemProvider.dispose();
        if (appliedCompositeFiltersItemProvider != null)
            appliedCompositeFiltersItemProvider.dispose();
        if (absoluteBoundsFilterItemProvider != null)
            absoluteBoundsFilterItemProvider.dispose();
        if (decorationItemProvider != null)
            decorationItemProvider.dispose();
        if (deObjectLinkItemProvider != null)
            deObjectLinkItemProvider.dispose();
        if (dDiagramLinkItemProvider != null)
            dDiagramLinkItemProvider.dispose();
        if (dSourceFileLinkItemProvider != null)
            dSourceFileLinkItemProvider.dispose();
        if (dNodeItemProvider != null)
            dNodeItemProvider.dispose();
        if (dNodeContainerItemProvider != null)
            dNodeContainerItemProvider.dispose();
        if (dNodeListItemProvider != null)
            dNodeListItemProvider.dispose();
        if (dNodeListElementItemProvider != null)
            dNodeListElementItemProvider.dispose();
        if (dEdgeItemProvider != null)
            dEdgeItemProvider.dispose();
        if (dDiagramSetItemProvider != null)
            dDiagramSetItemProvider.dispose();
        if (dotItemProvider != null)
            dotItemProvider.dispose();
        if (gaugeSectionItemProvider != null)
            gaugeSectionItemProvider.dispose();
        if (flatContainerStyleItemProvider != null)
            flatContainerStyleItemProvider.dispose();
        if (shapeContainerStyleItemProvider != null)
            shapeContainerStyleItemProvider.dispose();
        if (squareItemProvider != null)
            squareItemProvider.dispose();
        if (ellipseItemProvider != null)
            ellipseItemProvider.dispose();
        if (lozengeItemProvider != null)
            lozengeItemProvider.dispose();
        if (bundledImageItemProvider != null)
            bundledImageItemProvider.dispose();
        if (workspaceImageItemProvider != null)
            workspaceImageItemProvider.dispose();
        if (customStyleItemProvider != null)
            customStyleItemProvider.dispose();
        if (edgeStyleItemProvider != null)
            edgeStyleItemProvider.dispose();
        if (dAnalysisCustomDataItemProvider != null)
            dAnalysisCustomDataItemProvider.dispose();
        if (gaugeCompositeStyleItemProvider != null)
            gaugeCompositeStyleItemProvider.dispose();
        if (labelStyleItemProvider != null)
            labelStyleItemProvider.dispose();
        if (borderedStyleItemProvider != null)
            borderedStyleItemProvider.dispose();
        if (noteItemProvider != null)
            noteItemProvider.dispose();
        if (dragAndDropTargetItemProvider != null)
            dragAndDropTargetItemProvider.dispose();
        if (filterVariableHistoryItemProvider != null)
            filterVariableHistoryItemProvider.dispose();
        if (filterVariableValueItemProvider != null)
            filterVariableValueItemProvider.dispose();
        if (rgbValuesItemProvider != null)
            rgbValuesItemProvider.dispose();
        if (dAnalysisSessionEObjectItemProvider != null)
            dAnalysisSessionEObjectItemProvider.dispose();
        if (collapseFilterItemProvider != null)
            collapseFilterItemProvider.dispose();
        if (indirectlyCollapseFilterItemProvider != null)
            indirectlyCollapseFilterItemProvider.dispose();
        if (sessionManagerEObjectItemProvider != null)
            sessionManagerEObjectItemProvider.dispose();
        if (dFileItemProvider != null)
            dFileItemProvider.dispose();
        if (dResourceContainerItemProvider != null)
            dResourceContainerItemProvider.dispose();
        if (dProjectItemProvider != null)
            dProjectItemProvider.dispose();
        if (dFolderItemProvider != null)
            dFolderItemProvider.dispose();
        if (dModelItemProvider != null)
            dModelItemProvider.dispose();
        if (basicLabelStyleItemProvider != null)
            basicLabelStyleItemProvider.dispose();
        if (beginLabelStyleItemProvider != null)
            beginLabelStyleItemProvider.dispose();
        if (centerLabelStyleItemProvider != null)
            centerLabelStyleItemProvider.dispose();
        if (endLabelStyleItemProvider != null)
            endLabelStyleItemProvider.dispose();
        if (bracketEdgeStyleItemProvider != null)
            bracketEdgeStyleItemProvider.dispose();
        if (computedStyleDescriptionRegistryItemProvider != null)
            computedStyleDescriptionRegistryItemProvider.dispose();
        if (diagramElementMapping2ModelElementItemProvider != null)
            diagramElementMapping2ModelElementItemProvider.dispose();
        if (modelElement2ViewVariableItemProvider != null)
            modelElement2ViewVariableItemProvider.dispose();
        if (viewVariable2ContainerVariableItemProvider != null)
            viewVariable2ContainerVariableItemProvider.dispose();
        if (containerVariable2StyleDescriptionItemProvider != null)
            containerVariable2StyleDescriptionItemProvider.dispose();
    }

}
