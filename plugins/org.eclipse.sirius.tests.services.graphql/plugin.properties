# ====================================================================
# Copyright (c) 2018 Obeo
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License 2.0
# which accompanies this distribution, and is available at
# https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#    Obeo - initial API and implementation
# ====================================================================
pluginName = Sirius Services - GraphQL API Tests
providerName = Eclipse Modeling Project

introspectionQuery=query {\n\
  __schema {\n\
    queryType { name }\n\
    mutationType { name } \n\
    subscriptionType { name } \n\
    types {\n\
      ...typeDetails\n\
    }\n\
  }\n\
}\n\
\n\
fragment typeDetails on __Type {\n\
  kind\n\
  name\n\
  description\n\
  fields(includeDeprecated: true) {\n\
    name\n\
    description\n\
    args {\n\
      ...inputValueDetails\n\
    }\n\
    type {\n\
      ...typeReferenceDetails\n\
    }\n\
    isDeprecated\n\
    deprecationReason\n\
  }\n\
  inputFields {\n\
    ...inputValueDetails\n\
  }\n\
  interfaces {\n\
    ...typeReferenceDetails\n\
  }\n\
  enumValues(includeDeprecated: true) {\n\
    name\n\
    description\n\
    isDeprecated\n\
    deprecationReason\n\
  }\n\
  possibleTypes {\n\
    ...typeReferenceDetails\n\
  }\n\
}\n\
\n\
fragment inputValueDetails on __InputValue {\n\
  name\n\
  description\n\
  defaultValue\n\
  type {\n\
    ...typeReferenceDetails\n\
  }\n\
}\n\
\n\
fragment typeReferenceDetails on __Type {\n\
  kind\n\
  name\n\
  ofType {\n\
    kind\n\
    name\n\
    ofType {\n\
      kind\n\
      name\n\
      ofType {\n\
        kind\n\
        name\n\
      }\n\
    }\n\
  }\n\
}\n\

# ====================================================================
#
# Query
#
# ====================================================================

query=type Query {\n\
  viewer: User\n\
}

user=type User {\n\
  project(name: String!): Project\n\
  projects(first: Int, after: String, last: Int, before: String): UserProjectConnection\n\
  ePackage(nsURI: String!): EPackage\n\
  ePackages(first: Int, after: String, last: Int, before: String, includeDefaultEPackages: Boolean): UserEPackageConnection\n\
  viewpoint(identifier: String!): Viewpoint\n\
  viewpoints(first: Int, after: String, last: Int, before: String): UserViewpointConnection\n\
}

pageInfo=type PageInfo {\n\
  hasPreviousPage: Boolean!\n\
  hasNextPage: Boolean!\n\
}

# ====================================================================
#
# Mutation
#
# ====================================================================

mutation=type Mutation {\n\
  createProject(description: ProjectCreationDescription!): Project\n\
  createFolder(projectName: String!, containerPath: String!, name: String!): Folder\n\
  createTextFile(projectName: String!, containerPath: String!, description: TextFileCreationDescription!): File\n\
  createSemanticFile(projectName: String!, containerPath: String!, description: SemanticFileCreationDescription!): File\n\
  activateViewpoint(projectName: String!, viewpointIdentifier: String!): Project\n\
  deactivateViewpoint(projectName: String!, viewpointIdentifier: String!): Project\n\
  createRepresentation(projectName: String!, resourcePath: String!, description: RepresentationCreationDescription!): Project\n\
}

textFileCreationDescription=input TextFileCreationDescription {\n\
  name: String!\n\
  content: String!\n\
}

semanticFileCreationDescription=input SemanticFileCreationDescription {\n\
  name: String!\n\
  ePackageNsURI: String!\n\
  eClassName: String!\n\
}

representationCreationDescription=input RepresentationCreationDescription {\n\
  viewpointIdentifier: String!\n\
  representationIdentifier: String!\n\
  eObjectFragment: String!\n\
  name: String!\n\
}

# ====================================================================
#
# Workspace Domain
#
# ====================================================================

resource=interface Resource {\n\
  name: String!\n\
  path: String!\n\
  container: Container\n\
  project: Project!\n\
}

container=interface Container {\n\
  resources(first: Int, after: String, last: Int, before: String): ContainerResourceConnection\n\
}

project=type Project implements Resource, Container {\n\
  name: String!\n\
  path: String!\n\
  container: Container\n\
  project: Project!\n\
  resources(first: Int, after: String, last: Int, before: String): ContainerResourceConnection\n\
  description: String\n\
  resourceByPath(path: String!): Resource\n\
  activatedViewpoints(first: Int, after: String, last: Int, before: String): ProjectViewpointConnection\n\
}

folder=type Folder implements Resource, Container {\n\
  name: String!\n\
  path: String!\n\
  container: Container\n\
  project: Project!\n\
  resources(first: Int, after: String, last: Int, before: String): ContainerResourceConnection\n\
}

file=type File implements Resource {\n\
  name: String!\n\
  path: String!\n\
  container: Container\n\
  project: Project!\n\
  representations(first: Int, after: String, last: Int, before: String): FileRepresentationConnection\n\
  eObjects(first: Int, after: String, last: Int, before: String): FileEObjectConnection\n\
}

# ====================================================================
#
# Sirius Domain
#
# ====================================================================

viewpoint=type Viewpoint {\n\
  identifier: String!\n\
  name: String!\n\
  representationDescriptions(first: Int, after: String, last: Int, before: String): ViewpointRepresentationDescriptionConnection\n\
}

representationDescription=interface RepresentationDescription {\n\
  identifier: String!\n\
  name: String!\n\
  viewpoint: Viewpoint!\n\
  ePackages(first: Int, after: String, last: Int, before: String): RepresentationDescriptionEPackageConnection\n\
}

diagramDescription=type DiagramDescription implements RepresentationDescription {\n\
  identifier: String!\n\
  name: String!\n\
  viewpoint: Viewpoint!\n\
  ePackages(first: Int, after: String, last: Int, before: String): RepresentationDescriptionEPackageConnection\n\
}

representation=interface Representation {\n\
  name: String!\n\
}

diagram=type Diagram implements Representation {\n\
  name: String!\n\
  description: DiagramDescription!\n\
}

# ====================================================================
#
# EMF Domain
#
# ====================================================================

eObject=interface EObject {\n\
  fragment: String\n\
}

eModelElement=interface EModelElement {\n\
  fragment: String\n\
  eAnnotations: [EAnnotation!]!\n\
}

eNamedElement=interface ENamedElement {\n\
  fragment: String\n\
  eAnnotations: [EAnnotation!]!\n\
  name: String\n\
}

eClassifier=interface EClassifier {\n\
  fragment: String\n\
  eAnnotations: [EAnnotation!]!\n\
  name: String\n\
  instanceClassName: String\n\
  instanceTypeName: String\n\
  ePackage: EPackage\n\
  eTypeParameters: [ETypeParameter!]!\n\
}

eClass=interface EClass {\n\
  fragment: String\n\
  eAnnotations: [EAnnotation!]!\n\
  name: String\n\
  instanceClassName: String\n\
  instanceTypeName: String\n\
  ePackage: EPackage\n\
  eTypeParameters: [ETypeParameter!]!\n\
  abstract: Boolean!\n\
  interface: Boolean!\n\
  eSuperTypes: [EClass!]!\n\
  eOperations: [EOperation!]!\n\
  eAllAttributes: [EAttribute!]!\n\
  eAllReferences: [EReference!]!\n\
  eReferences: [EReference!]!\n\
  eAttributes: [EAttribute!]!\n\
  eAllContainments: [EReference!]!\n\
  eAllOperations: [EOperation!]!\n\
  eAllStructuralFeatures: [EStructuralFeature!]!\n\
  eAllSuperTypes: [EClass!]!\n\
  eIDAttribute: EAttribute\n\
  eStructuralFeatures: [EStructuralFeature!]!\n\
  eGenericSuperTypes: [EGenericType!]!\n\
  eAllGenericSuperTypes: [EGenericType!]!\n\
}

eTypedElement=interface ETypedElement {\n\
  fragment: String\n\
  eAnnotations: [EAnnotation!]!\n\
  name: String\n\
  ordered: Boolean!\n\
  unique: Boolean!\n\
  lowerBound: Int!\n\
  upperBound: Int!\n\
  many: Boolean!\n\
  required: Boolean!\n\
  eType: EClassifier\n\
  eGenericType: EGenericType\n\
}

eStructuralFeature=interface EStructuralFeature {\n\
  fragment: String\n\
  eAnnotations: [EAnnotation!]!\n\
  name: String\n\
  ordered: Boolean!\n\
  unique: Boolean!\n\
  lowerBound: Int!\n\
  upperBound: Int!\n\
  many: Boolean!\n\
  required: Boolean!\n\
  eType: EClassifier\n\
  eGenericType: EGenericType\n\
  changeable: Boolean!\n\
  volatile: Boolean!\n\
  transient: Boolean!\n\
  defaultValueLiteral: String\n\
  unsettable: Boolean!\n\
  derived: Boolean!\n\
  eContainingClass: EClass\n\
}

eAttribute=interface EAttribute {\n\
  fragment: String\n\
  eAnnotations: [EAnnotation!]!\n\
  name: String\n\
  ordered: Boolean!\n\
  unique: Boolean!\n\
  lowerBound: Int!\n\
  upperBound: Int!\n\
  many: Boolean!\n\
  required: Boolean!\n\
  eType: EClassifier\n\
  eGenericType: EGenericType\n\
  changeable: Boolean!\n\
  volatile: Boolean!\n\
  transient: Boolean!\n\
  defaultValueLiteral: String\n\
  unsettable: Boolean!\n\
  derived: Boolean!\n\
  eContainingClass: EClass\n\
  iD: Boolean!\n\
  eAttributeType: EDataType\n\
}

eReference=interface EReference {\n\
  fragment: String\n\
  eAnnotations: [EAnnotation!]!\n\
  name: String\n\
  ordered: Boolean!\n\
  unique: Boolean!\n\
  lowerBound: Int!\n\
  upperBound: Int!\n\
  many: Boolean!\n\
  required: Boolean!\n\
  eType: EClassifier\n\
  eGenericType: EGenericType\n\
  changeable: Boolean!\n\
  volatile: Boolean!\n\
  transient: Boolean!\n\
  defaultValueLiteral: String\n\
  unsettable: Boolean!\n\
  derived: Boolean!\n\
  eContainingClass: EClass\n\
  containment: Boolean!\n\
  container: Boolean!\n\
  resolveProxies: Boolean!\n\
  eOpposite: EReference\n\
  eReferenceType: EClass\n\
  eKeys: [EAttribute!]!\n\
}